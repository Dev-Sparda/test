--215
WITH fecha_anterior AS (
    SELECT MAX(FECHA_DATOS) as FECHA_ANTERIOR
    FROM SALIDAS 
    WHERE FECHA_DATOS < 'tu_fecha_actual'
),
datos_k AS (
    -- K = 10940_t (fecha actual)
    SELECT 
        SUBSIDIARIA,
        SUM(MONTO) as MONTO_K
    FROM SALIDAS
    WHERE FECHA_DATOS = 'tu_fecha_actual'
        AND CONCEPTO = '10940'
    GROUP BY SUBSIDIARIA
),
datos_l AS (
    -- L = Max[(10920+10930)_t - (10900)_t-1, 0]
    SELECT 
        s_actual.SUBSIDIARIA,
        CASE 
            WHEN (COALESCE(s_actual.SUMA_ACTUAL, 0) - COALESCE(s_anterior.MONTO_ANTERIOR, 0)) > 0 
            THEN (COALESCE(s_actual.SUMA_ACTUAL, 0) - COALESCE(s_anterior.MONTO_ANTERIOR, 0))
            ELSE 0 
        END as MONTO_L
    FROM (
        -- (10920+10930)_t (fecha actual)
        SELECT 
            SUBSIDIARIA,
            SUM(MONTO) as SUMA_ACTUAL
        FROM SALIDAS
        WHERE FECHA_DATOS = 'tu_fecha_actual'
            AND CONCEPTO IN ('10920', '10930')
        GROUP BY SUBSIDIARIA
    ) s_actual
    LEFT JOIN (
        -- (10900)_t-1 (fecha anterior)
        SELECT 
            SUBSIDIARIA,
            SUM(MONTO) as MONTO_ANTERIOR
        FROM SALIDAS
        WHERE FECHA_DATOS = (SELECT FECHA_ANTERIOR FROM fecha_anterior)
            AND CONCEPTO = '10900'
        GROUP BY SUBSIDIARIA
    ) s_anterior ON s_actual.SUBSIDIARIA = s_anterior.SUBSIDIARIA
),
combinacion_base AS (
    SELECT DISTINCT SUBSIDIARIA 
    FROM SALIDAS
    WHERE FECHA_DATOS = 'tu_fecha_actual'
)
SELECT 
    'tu_fecha_actual' AS FECHA_DATOS,
    (SELECT FECHA_ANTERIOR FROM fecha_anterior) AS FECHA_ANTERIOR,
    cb.SUBSIDIARIA,
    '10940' AS CONCEPTO_K,
    COALESCE(dk.MONTO_K, 0) AS MONTO_K,
    'Max[(10920+10930)_t - (10900)_t-1, 0]' AS CONCEPTO_L,
    COALESCE(dl.MONTO_L, 0) AS MONTO_L,
    CASE 
        WHEN COALESCE(dk.MONTO_K, 0) BETWEEN 
            COALESCE(dl.MONTO_L, 0) * 0.99 AND COALESCE(dl.MONTO_L, 0) * 1.01
        THEN 1  -- ✅ Cumple (K está dentro de ±1% de L)
        ELSE 2   -- ❌ No cumple
    END AS RESULTADO
FROM combinacion_base cb
LEFT JOIN datos_k dk ON cb.SUBSIDIARIA = dk.SUBSIDIARIA
LEFT JOIN datos_l dl ON cb.SUBSIDIARIA = dl.SUBSIDIARIA;


--216
WITH fecha_anterior AS (
    SELECT MAX(FECHA_DATOS) as FECHA_ANTERIOR
    FROM SALIDAS 
    WHERE FECHA_DATOS < 'tu_fecha_actual'
),
datos_m AS (
    -- M = 10950_t (fecha actual)
    SELECT 
        SUBSIDIARIA,
        SUM(MONTO) as MONTO_M
    FROM SALIDAS
    WHERE FECHA_DATOS = 'tu_fecha_actual'
        AND CONCEPTO = '10950'
    GROUP BY SUBSIDIARIA
),
datos_n AS (
    -- N = Abs(Min[(10920+10930)_t - (10900)_t-1, 0])
    SELECT 
        s_actual.SUBSIDIARIA,
        ABS(
            CASE WHEN (COALESCE(s_actual.SUMA_ACTUAL, 0) - COALESCE(s_anterior.MONTO_ANTERIOR, 0)) < 0 
                 THEN (COALESCE(s_actual.SUMA_ACTUAL, 0) - COALESCE(s_anterior.MONTO_ANTERIOR, 0))
                 ELSE 0 
            END
        ) as MONTO_N
    FROM (
        -- (10920+10930)_t (fecha actual)
        SELECT 
            SUBSIDIARIA,
            SUM(MONTO) as SUMA_ACTUAL
        FROM SALIDAS
        WHERE FECHA_DATOS = 'tu_fecha_actual'
            AND CONCEPTO IN ('10920', '10930')
        GROUP BY SUBSIDIARIA
    ) s_actual
    LEFT JOIN (
        -- (10900)_t-1 (fecha anterior)
        SELECT 
            SUBSIDIARIA,
            SUM(MONTO) as MONTO_ANTERIOR
        FROM SALIDAS
        WHERE FECHA_DATOS = (SELECT FECHA_ANTERIOR FROM fecha_anterior)
            AND CONCEPTO = '10900'
        GROUP BY SUBSIDIARIA
    ) s_anterior ON s_actual.SUBSIDIARIA = s_anterior.SUBSIDIARIA
),
combinacion_base AS (
    SELECT DISTINCT SUBSIDIARIA 
    FROM SALIDAS
    WHERE FECHA_DATOS = 'tu_fecha_actual'
)
SELECT 
    'tu_fecha_actual' AS FECHA_DATOS,
    (SELECT FECHA_ANTERIOR FROM fecha_anterior) AS FECHA_ANTERIOR,
    cb.SUBSIDIARIA,
    '10950' AS CONCEPTO_M,
    COALESCE(dm.MONTO_M, 0) AS MONTO_M,
    'Abs(Min[(10920+10930)_t - (10900)_t-1, 0])' AS CONCEPTO_N,
    COALESCE(dn.MONTO_N, 0) AS MONTO_N,
    -- Para debugging, mostramos también los componentes:
    (SELECT SUMA_ACTUAL FROM (
        SELECT SUBSIDIARIA, SUM(MONTO) as SUMA_ACTUAL
        FROM SALIDAS
        WHERE FECHA_DATOS = 'tu_fecha_actual'
            AND CONCEPTO IN ('10920', '10930')
        GROUP BY SUBSIDIARIA
    ) WHERE SUBSIDIARIA = cb.SUBSIDIARIA) AS SUMA_10920_10930,
    (SELECT MONTO_ANTERIOR FROM (
        SELECT SUBSIDIARIA, SUM(MONTO) as MONTO_ANTERIOR
        FROM SALIDAS
        WHERE FECHA_DATOS = (SELECT FECHA_ANTERIOR FROM fecha_anterior)
            AND CONCEPTO = '10900'
        GROUP BY SUBSIDIARIA
    ) WHERE SUBSIDIARIA = cb.SUBSIDIARIA) AS MONTO_10900_ANTERIOR,
    CASE 
        WHEN COALESCE(dm.MONTO_M, 0) BETWEEN 
            COALESCE(dn.MONTO_N, 0) * 0.99 AND COALESCE(dn.MONTO_N, 0) * 1.01
        THEN 1  -- ✅ Cumple (M está dentro de ±1% de N)
        ELSE 2   -- ❌ No cumple
    END AS RESULTADO
FROM combinacion_base cb
LEFT JOIN datos_m dm ON cb.SUBSIDIARIA = dm.SUBSIDIARIA
LEFT JOIN datos_n dn ON cb.SUBSIDIARIA = dn.SUBSIDIARIA;


--216v2
WITH fecha_anterior AS (
    SELECT MAX(FECHA_DATOS) as FECHA_ANTERIOR
    FROM SALIDAS 
    WHERE FECHA_DATOS < 'tu_fecha_actual'
),
datos_componentes AS (
    SELECT 
        s_actual.SUBSIDIARIA,
        COALESCE(s_actual.SUMA_ACTUAL, 0) as SUMA_10920_10930,
        COALESCE(s_anterior.MONTO_ANTERIOR, 0) as MONTO_10900_ANTERIOR,
        (COALESCE(s_actual.SUMA_ACTUAL, 0) - COALESCE(s_anterior.MONTO_ANTERIOR, 0)) as DIFERENCIA,
        CASE 
            WHEN (COALESCE(s_actual.SUMA_ACTUAL, 0) - COALESCE(s_anterior.MONTO_ANTERIOR, 0)) < 0 
            THEN (COALESCE(s_actual.SUMA_ACTUAL, 0) - COALESCE(s_anterior.MONTO_ANTERIOR, 0))
            ELSE 0 
        END as MIN_RESULT,
        ABS(
            CASE WHEN (COALESCE(s_actual.SUMA_ACTUAL, 0) - COALESCE(s_anterior.MONTO_ANTERIOR, 0)) < 0 
                 THEN (COALESCE(s_actual.SUMA_ACTUAL, 0) - COALESCE(s_anterior.MONTO_ANTERIOR, 0))
                 ELSE 0 
            END
        ) as MONTO_N
    FROM (
        -- (10920+10930)_t (fecha actual)
        SELECT 
            SUBSIDIARIA,
            SUM(MONTO) as SUMA_ACTUAL
        FROM SALIDAS
        WHERE FECHA_DATOS = 'tu_fecha_actual'
            AND CONCEPTO IN ('10920', '10930')
        GROUP BY SUBSIDIARIA
    ) s_actual
    LEFT JOIN (
        -- (10900)_t-1 (fecha anterior)
        SELECT 
            SUBSIDIARIA,
            SUM(MONTO) as MONTO_ANTERIOR
        FROM SALIDAS
        WHERE FECHA_DATOS = (SELECT FECHA_ANTERIOR FROM fecha_anterior)
            AND CONCEPTO = '10900'
        GROUP BY SUBSIDIARIA
    ) s_anterior ON s_actual.SUBSIDIARIA = s_anterior.SUBSIDIARIA
),
datos_m AS (
    -- M = 10950_t (fecha actual)
    SELECT 
        SUBSIDIARIA,
        SUM(MONTO) as MONTO_M
    FROM SALIDAS
    WHERE FECHA_DATOS = 'tu_fecha_actual'
        AND CONCEPTO = '10950'
    GROUP BY SUBSIDIARIA
),
combinacion_base AS (
    SELECT DISTINCT SUBSIDIARIA 
    FROM SALIDAS
    WHERE FECHA_DATOS = 'tu_fecha_actual'
)
SELECT 
    'tu_fecha_actual' AS FECHA_DATOS,
    (SELECT FECHA_ANTERIOR FROM fecha_anterior) AS FECHA_ANTERIOR,
    cb.SUBSIDIARIA,
    
    -- Datos de M
    '10950' AS CONCEPTO_M,
    COALESCE(dm.MONTO_M, 0) AS MONTO_M,
    
    -- Datos de N y componentes
    'Abs(Min[(10920+10930)_t - (10900)_t-1, 0])' AS CONCEPTO_N,
    COALESCE(dc.MONTO_N, 0) AS MONTO_N,
    
    -- Debugging detallado
    dc.SUMA_10920_10930,
    dc.MONTO_10900_ANTERIOR,
    dc.DIFERENCIA,
    dc.MIN_RESULT,
    
    -- Porcentaje de variación
    CASE 
        WHEN COALESCE(dc.MONTO_N, 0) = 0 THEN 
            CASE WHEN COALESCE(dm.MONTO_M, 0) = 0 THEN 0.0 ELSE NULL END
        ELSE 
            ((COALESCE(dm.MONTO_M, 0) - COALESCE(dc.MONTO_N, 0)) / COALESCE(dc.MONTO_N, 0)) * 100.0
    END AS PORCENTAJE_VARIACION,
    
    -- Resultado final
    CASE 
        WHEN COALESCE(dm.MONTO_M, 0) BETWEEN 
            COALESCE(dc.MONTO_N, 0) * 0.99 AND COALESCE(dc.MONTO_N, 0) * 1.01
        THEN 1
        ELSE 2
    END AS RESULTADO
    
FROM combinacion_base cb
LEFT JOIN datos_m dm ON cb.SUBSIDIARIA = dm.SUBSIDIARIA
LEFT JOIN datos_componentes dc ON cb.SUBSIDIARIA = dc.SUBSIDIARIA;
